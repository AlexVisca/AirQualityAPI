version: '3'
services:

  zookeeper:
    hostname: zookeeper
    image: wurstmeister/zookeeper
    volumes:
      - /home/api-dev/zookeeper/data:/opt/zookeeper-3.4.13/data
    ports:
      - "2181"

  kafka:
    hostname: kafka
    image: wurstmeister/kafka
    command: [start-kafka.sh]
    environment:
      KAFKA_CREATE_TOPICS: "telemetry:1:1" # topic:partition:replicas
      KAFKA_ADVERTISED_HOST_NAME: kafka # docker-machine ip
      KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_DIRS: /kafka/kafka-logs
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/api-dev/kafka:/kafka/kafka-logs
    ports:
      - "9092:9092"
    expose:
      - '9092'
    depends_on:
      - "zookeeper"

  database:
    hostname: database
    image: mysql:8
    restart: always
    environment:
      MYSQL_DATABASE: 'telemetry'
      MYSQL_USER: 'storage'
      MYSQL_PASSWORD: store
      MYSQL_ROOT_PASSWORD: rootbeer
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - '3306:3306'
    expose:
      - '3306'

  receiver:
    hostname: receiver
    build: 
      context: ../receiver
    image: api_receiver:latest
    environment:
      TARGET_ENV: prod
      SERVER_HOST: kafka
      SERVER_PORT: 9092
    volumes:
      - /home/api-dev/config/receiver:/config
      - /home/api-dev/logs:/logs
    ports:
      - '8080:8080'
    expose:
      - '8080'
    depends_on:
      - "kafka"
      - "storage"

  storage:
    hostname: storage
    build: 
      context: ../storage
    image: api_storage:latest
    environment:
      TARGET_ENV: prod
      SERVER_HOST: kafka
      SERVER_PORT: 9092
      DB_HOST: database
      DB_PORT: 3306
    volumes:
      - /home/api-dev/config/storage:/config
      - /home/api-dev/logs:/logs
    ports:
      - '8090:8090'
    expose:
      - '8090'
    depends_on:
      - "kafka"
      - "database"

  processing:
    hostname: processor
    build: 
      context: ../processing
    image: api_processing:latest
    environment:
      TARGET_ENV: prod
      SERVER_HOST: storage
      SERVER_PORT: 8090
    volumes:
      - /home/api-dev/config/processing:/config
      - /home/api-dev/logs:/logs
      - stats:/src/data
    ports:
      - '8100:8100'
    expose:
      - '8100'
    depends_on:
      - "storage"

  auditlog:
    hostname: auditlog
    build: 
      context: ../log_audit
    image: api_auditlog:latest
    environment:
      TARGET_ENV: prod
      SERVER_HOST: kafka
      SERVER_PORT: 9092
    volumes:
      - /home/api-dev/config/audit_log:/config
      - /home/api-dev/logs:/logs
    ports:
      - '8110:8110'
    expose:
      - '8110'
    depends_on:
      - "kafka"

  dashboard:
    hostname: dashboard
    build: 
      context: ../ui-dashboard
    image: api_dashboard:latest
    ports:
      - '3000:3000'
    depends_on:
      - "processing"
      - "auditlog"

volumes:
  mysql:
  stats:
